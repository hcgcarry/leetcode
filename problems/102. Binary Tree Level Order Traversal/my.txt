/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> nodeQueue;
        vector<vector<int>> result;
        if(!root) return result; 
        nodeQueue.push(root);
        
        while(!nodeQueue.empty()){
            vector<int> localResult;
            int levelCount = nodeQueue.size();
            while(levelCount--){
                TreeNode* curNode = nodeQueue.front();
                nodeQueue.pop();
                localResult.push_back(curNode->val);
                if(curNode->left)nodeQueue.push(curNode->left);
                if(curNode->right)  nodeQueue.push(curNode->right);
            }
            result.push_back(localResult);
            
        }
        
        return result;
    }
};