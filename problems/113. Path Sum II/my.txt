/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> result;
        vector<int> localResult;
        recur(result,localResult,root,sum);
        return result;
    }
    
    void recur(vector<vector<int>>& result,vector<int>& localResult,TreeNode* root,int sum){
         if(!root){
            return ;
        }
        if(!root->left && !root->right && root->val == sum){
            localResult.push_back(root->val);
            result.push_back(localResult);
            localResult.pop_back();
        }
        
       
        localResult.push_back(root->val);
        recur(result,localResult,root->left,sum - root->val);
        recur(result,localResult,root->right,sum - root->val);
        localResult.pop_back();
    }
};