class Solution {
public:
    void solve(vector<vector<char>>& board) {
        
        if(board.empty() || board[0].empty()) return ;
        int row = board.size();
        int col = board[0].size();
        for(int i = 0;i<row;i++){
            dfs1(board,i,0);
           // cout << "i" << i << 0 << endl;
            dfs1(board,i,col-1);
        }
        for(int i=0;i<col;i++){
            dfs1(board,0,i);
            dfs1(board,row-1,i);
        }
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(board[i][j] == 'O'){
                    board[i][j] = 'X';
                }
            }
        }
         for(int i = 0;i<row;i++){
            dfs2(board,i,0);
            dfs2(board,i,col-1);
        }
        for(int i=0;i<col;i++){
            dfs2(board,0,i);
            dfs2(board,row-1,i);
        }
        
        
    }
    
    void dfs1(vector<vector<char>>& board,int i,int j){
        //注意這邊是i >=board.size() 非 i>board.size();
        if(i <0 || i>=board.size() || j<0 || j>=board[0].size() || board[i][j] =='X' || board[i][j] == 'L')return;
        if(board[i][j] == 'O'){
            board[i][j] = 'L';
        }
        
        dfs1(board,i+1,j);
           dfs1(board,i,j+1);
           dfs1(board,i-1,j);
           dfs1(board,i,j-1);
        
    }
        void dfs2(vector<vector<char>>& board,int i,int j){
        if(i <0 || i>=board.size() || j<0 || j>=board[0].size() || board[i][j] =='X' || board[i][j] == 'O')return;
        if(board[i][j] == 'L'){
            board[i][j] = 'O';
        }
        
        dfs2(board,i+1,j);
           dfs2(board,i,j+1);
           dfs2(board,i-1,j);
           dfs2(board,i,j-1);
        
    }
};
