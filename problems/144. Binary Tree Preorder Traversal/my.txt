//普通的DFS

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        stack<TreeNode*> nodeStack;
        vector<int> result;
        if(!root) return result;
        nodeStack.push(root);
        while(!nodeStack.empty()){
            int levelSize = nodeStack.size();
            while(levelSize--){
                TreeNode* curNode = nodeStack.top();
                nodeStack.pop();
                result.push_back(curNode ->val);
                if(curNode->right)nodeStack.push(curNode->right);
                if(curNode->left) nodeStack.push(curNode->left);
                
            }
        }
        return result;
    }
};