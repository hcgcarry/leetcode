https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45559/My-Accepted-code-with-explaination.-Does-anyone-have-a-better-idea

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode*> st;
        
        st.push(root);
        vector<int> result;
        if(!root) return result;
        while(!st.empty()){
            TreeNode* curNode = st.top();
            st.pop();
            result.push_back(curNode->val);
            if(curNode->left)
            st.push(curNode->left);
            if(curNode->right)
                st.push(curNode->right);
                
        }
        reverse(result.begin(),result.end());
        return result;
    }
};