/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        int levelHasVisited=0;
        recur(result,levelHasVisited,1,root);
        return result;
            
    }
    
    void recur(vector<int>& result,int& levelHasVisited,int level,TreeNode* root){
        if(!root){
            return ;    
        }
        if(levelHasVisited < level){
            levelHasVisited++;
            result.push_back(root->val);
        }
        recur(result,levelHasVisited,level+1,root->right);
         recur(result,levelHasVisited,level+1,root->left);
    
        
        
    }
};