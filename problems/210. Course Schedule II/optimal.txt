//topology sort
class Solution {
    private:
       vector<vector<int>> adjList; 
        vector<int> inDegree;
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        adjList = buildAdjList(numCourses,prerequisites);
        inDegree = vector<int>(numCourses,0);
        vector<int> result;
        buildInDegree();
        for(int i=0;i<numCourses;i++){
            int flag=0;
            int j=0;
            for(j=0;j<numCourses;j++){
                if(inDegree[j] ==0){
                    flag =1;
                    result.push_back(j);
                    //注意這邊要把抓過的的設成-1 不然會重複抓取
                    inDegree[j] =-1;
                    break;
                }
            }
            if(!flag){
                return vector<int>{};
            }
            
            for(auto item:adjList[j]){
                inDegree[item] --;
            }
        }
        return result;
        
        
    }
    
    vector<vector<int>> buildAdjList(int numCourses,vector<vector<int>>& prerequisites){
        vector<vector<int>> result(numCourses);
        for(auto item:prerequisites){
            result[item[1]].push_back(item[0]);
        }
        return result;
    }
    void buildInDegree(){
        for(int i=0;i<adjList.size();i++){
            for(auto item :adjList[i]){
                inDegree[item] ++;
            }
        }
        
        
    }
};