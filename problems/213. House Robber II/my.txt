class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.empty()) return 0;
        if(nums.size() ==1) return nums[0];
        int len = nums.size();
        int firstSelectSum = 0;
        
        //第一個拿
        visited[0] = true;
        vector<int> dp(len,0);
        dp[0] = nums[0];
        dp[1] = dp[0];
        for(int i=2;i<len-1;i++){
            dp[i] = max(dp[i-1],dp[i-2] + nums[i]);
        }
        firstSelectSum  = dp[len-2];
        //第一個不拿
        for(int i=0;i<len;i++){
            dp[i]=0;
        }
        dp[0] = 0;
        dp[1] = nums[1];
        int firstNotSelectSum =0;
        for(int i=2;i<len;i++){
            dp[i] = max(dp[i-1],dp[i-2] + nums[i]);
        }
        firstNotSelectSum  = dp[len-1]; 
        return max(firstSelectSum,firstNotSelectSum);
    }
};
