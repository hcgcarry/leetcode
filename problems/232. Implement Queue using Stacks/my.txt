class MyQueue {
public:
    /** Initialize your data structure here. */
    
    stack<int> stPre,stCur;
    
    MyQueue() {
        
    }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        stPre.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        if(stCur.empty()){
            while(!stPre.empty()){
                int item = stPre.top();
                stPre.pop();
                stCur.push(item);
            }
        }
        int result = stCur.top();
        stCur.pop();
        
        return result;
        
    }
    
    /** Get the front element. */
    int peek() {
        if(stCur.empty()){
            while(!stPre.empty()){
                int item = stPre.top();
                stPre.pop();
                stCur.push(item);
            }
        }
        int result = stCur.top();
        
        return result;
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        if(stCur.empty() && stPre.empty()) return true;
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */