https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/discuss/75928/Share-my-DP-solution-(By-State-Machine-Thinking)


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.empty()) return 0;
        int len = prices.size();
        vector<int> s0(len),s1(len),s2(len);
        // s0,s1,s2的第i項是第i天時停留在這個狀態可以達到的最大prices
        s0[0] = 0;s1[0] = -1*prices[0];
        for(int i=1;i<len;i++){
            s0[i] = max(s0[i-1],s2[i-1]);
            s1[i] = max(s0[i-1]-prices[i],s1[i-1]);
            s2[i] = s1[i-1] + prices[i];
            
        }
        return max(s0[len-1],s2[len-1]);
    }
};