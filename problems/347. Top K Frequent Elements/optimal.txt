class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> freqMap;
        for(auto& item:nums){
            freqMap[item]++;
        }
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> prio_queue;
        for(auto& item:freqMap){
            prio_queue.push({item.second,item.first});
        }
        while(prio_queue.size() >k) prio_queue.pop();
        vector<int> result;
        while(!prio_queue.empty()){
            result.push_back(prio_queue.top().second);
            prio_queue.pop();
        }
        
        return result;
    }
};