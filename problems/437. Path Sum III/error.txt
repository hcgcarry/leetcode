這樣寫的話子pathsum的 dfs已經加到result一次了
結果子pathsum return to Parent pathsum再加一次

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int result=0;
    int pathSum(TreeNode* root, int sum) {
        if(!root) return 0;
        dfs(root,sum);
        result+= pathSum(root->right,sum);
        result += pathSum(root->left,sum);
        return result;
    }
    void dfs(TreeNode* root,int sum){
        if(!root) return;
        sum = sum-root->val;
        cout << "rootval"<<root->val <<"sum" << sum<<endl;
        if(sum==0){
            result++;
            cout << "result add" << endl;
        }
        dfs(root->left,sum);
        dfs(root->right,sum);
    }
    
};