/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        
        int len=0;
        ListNode* tmp =head;
        while(tmp){
            tmp = tmp->next;
            len++;
        }
        if(len==0) return head;
        k %= len;
        if(k==0) return head;
        
        ListNode* tmpHead = new ListNode(-1);
        tmpHead ->next = head;
        ListNode* fast,*slow;
        fast = slow = tmpHead;
        for(int i=0;i<k;i++){
            fast = fast->next;
        }
        
        while(fast->next){
            fast = fast->next;
            slow = slow->next;
            
        }
        ListNode* newHeadNode = slow->next;
        slow->next = NULL;
        ListNode* newTailNode = newHeadNode;
        while(newTailNode->next){
            newTailNode = newTailNode->next;
        }
      
        newTailNode->next = head;
        
        
        return newHeadNode;
        
        
    }
};